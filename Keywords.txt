******************************algorithm.nxc***************************************************
arrayResize(float &array[], unsigned int size)
arrayResizeStr(string &array[], unsigned int size)
arrayMaxPos(const float array[], unsigned int idx = 0, unsigned int len = NA)
arrayMaxPosEx(const float  &array[], unsigned int &max_pos[], unsigned int idx = 0, unsigned int len = NA)
arrayMinPos(const float array[], unsigned int idx = 0, unsigned int len = NA)
arrayMinPosEx(const float  &array[], unsigned int &min_pos[], unsigned int idx = 0, unsigned int len = NA)
nearestNeighbor(float &src[], int x, int &distance, unsigned int idx = 0, unsigned int len = NA)
farthestNeighbor(float &src[], int x, int &distance, unsigned int idx = 0, unsigned int len = NA)
strtok(const string str, const string del)
strtokEx(const string str, string &del[])
tokenize(const string raw_string, const string delimiter, string &tokens[])
tokenizeEx(const string raw_string, string &delimiters[], string &tokens[])
rgb2hsl(int &rgb[], int &hsl[], int admax = 1024)
******************************class.nxc********************************************************
initClass(const unsigned int instances = 0)
setClassFlag(unsigned int class, bool flag)
setClassScopeBegin(const unsigned int class)
setClassScopeEnd()
classHandler(unsigned int class = NA)
******************************com.nxc********************************************************
initCom(const byte outbox = 0, const byte inbox = 0)
purgeMailbox(byte mailbox)
setComTime(const unsigned long sendTime)
setComOutbox(const byte outbox)
setComInbox(const byte inbox)
setComTimeout(const unsigned long timeout)
setComPollingTime(const unsigned long pollingTime)
send(const string message, unsigned long sendTime = NA, byte outbox = NA)
sendNum(float number, unsigned long time = NA, byte outbox = NA)
sendF(const string format, const float number, unsigned long time = NA, byte outbox = NA)
receiveString(string &inString, byte inbox = NA, unsigned long timeout = NA, unsigned int pollingTime = NA)
receiveNum(float &inNumber, byte inbox = NA, unsigned int pollingTime = NA, unsigned long timeout = NA)
*****************************console.nxc*******************************************************
resetConsole(const bool clearScreen = true)
initConsole(unsigned int topLine = 1, unsigned int bottomLine = 8, unsigned int leftBorder = 0, unsigned int rightBorder = DISPLAY_WIDTH)
setConsoleTime(const unsigned long time)
setConsoleEndl(const bool endl)
setConsoleTopLine(unsigned int line)
setConsoleBottomLine(unsigned int line)
setConsoleLeftBorder(unsigned int x)
setConsoleRightBorder(unsigned int x)
getConsoleLinepointer()
cout(string output, unsigned long time = NA, bool endl = NA)
coutNum(float number, unsigned long time = NA, bool endl = NA)
coutF(string format, float number, unsigned long time = NA, bool endl = NA)
kbhit()
****************************debug-com.nxc********************************************************
initComDebug(const byte outbox = 0, const unsigned long sendTime = 500)
setComDebugSendTime(const unsigned long sendTime)
setComDebugOutbox(const byte outbox)
sendDebug(const string message, unsigned int class = NA, unsigned long time = NA)
sendDebugNum(float number, unsigned int class = NA, unsigned long time = NA)
sendDebugF(const string format, const float number, unsigned int class = NA, unsigned long time = NA)
****************************debug-console.nxc*****************************************************
initConsoleDebug(const long time = 1000, const bool endl = true)
setConsoleDebugTime(const unsigned long time)
setConsoleDebugEndl(const bool endl)
coutDebug(string message, unsigned int class = NA, unsigned long time = NA, bool endl = NA)
coutDebugNum(float number, unsigned int class = NA, unsigned long time = NA, bool endl = NA)
coutDebugF(string &format, float &number, unsigned int class = NA, unsigned long time = NA, bool endl = NA)
*****************************debug-file.nxc*********************************************************
initFileDebug(byte handle)
writeDebug(string message, unsigned int class = NA)
writeDebugNum(float number, unsigned int class = NA)
writeDebugF(string format, float number, unsigned int class = NA)
*****************************gui.nxc******************************************************************
newProgressBar(int x, int y, int width, int height, int min, int max, int opt, int &objId)
newSlider(int x, int y, int width, int height, int min, int max, int opt, int &objId)
newMarker(int parent, int scale, int ratio, int &objId)
newNumIndicator(int x, int y, string name, int &objId)
newLed(int x, int y, int radius, int &objId)
newStrIndicator(int x, int y, string name, int &objId)
ProgressBarAdd(int objId, int n, bool update = true)
ProgressBarSet(int objId, int n, bool update = true)
SliderAdd(int objId, int n, bool update = true)
SliderSet(int objId, int n, bool update = true)
NumIndicatorSet(int objId, float data)
NumIndicatorName(int objId, string name)
LedSet(int objId, bool state)
LedInvert(int objId)
StrIndicatorSet(int objId, string data)
StrIndicatorName(int objId, string name)
objectShow(int objId, bool visible = true)
deleteObject(int objId)
********************************motorcontrollerDG&RWTH.nxc**************************************************
initMC(int motors = 3, int amax = 18, int vmax = 100, int regTime = 10)
controllerPara(byte m, int amax, int vmax)
controllerOn()
controllerOff()
controllerOnEx(byte m)
controllerOffEx(byte m)
resetMotor(byte m, char pwr)
waitMove(int m)
moveDone(int m)
moveAbs(int m, long pos, int pwr = 0, bool wait_move = true) 
moveRel(int m, ...)
moveFwd(int m, char pwr)
moveRev(int m, char pwr)
motorOff(int m)
motorEmergencyStop(...)
resetErrorCorrection(byte m)